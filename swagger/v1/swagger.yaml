---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/freelancers":
    get:
      summary: list freelancers
      responses:
        '200':
          description: successful
    post:
      summary: create freelancer
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Lourie Crona
                photo:
                  type: string
                  example: http://ryan.io/ashli_lind
                  pattern: "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$"
                details:
                  type: string
                  example: Non ipsum aliquid. Laudantium saepe rerum. Accusantium
                    nihil nam.
                fee:
                  type: integer
                  example: 76
                location:
                  type: string
                  example:
                    full_address: 49017 Morissette Brook, Andersonmouth, ND 36359-4094
              required:
              - name
              - photo
              - details
              - fee
              - location
  "/api/v1/freelancers/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show freelancer
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/reservations":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_date:
                  type: date
                freelancer_id:
                  type: integer
              required:
              - appointment_date
  "/api/v1/users/{user_id}/reservations/new":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: new reservation
      responses:
        '200':
          description: successful
  "/api/v1/specializations":
    get:
      summary: list specializations
      responses:
        '200':
          description: successful
    post:
      summary: create specialization
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
